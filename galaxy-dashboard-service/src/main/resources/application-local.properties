spring.application.name=${application-name:finzly.dashboard}
env=local
spring.cloud.config.label=${branch:master}
spring.profiles.active=${env}
health.config.enabled=false
eureka.client.enabled=false
server.servlet.context-path=/dashboard-service
server.port=8089


bankos.application.db.base-schema=galaxy_dashboard

service.payment.internal.url=http://galaxy-payment:8080/payment-service


db.url=${DB-URL:jdbc:mysql://host.docker.internal:3309/galaxy_dashboard?createDatabaseIfNotExist=true}
db.user=${db-user:root}
db.pass=${db-pass:Finzly248#}

# Connection url for the database "netgloo_blog"
spring.datasource.url = ${db.url}
spring.datasource.jdbc.url = ${db.url}
spring.jpa.generate-ddl=false
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.datasource.username = ${db.user}
spring.datasource.password = ${db.pass}

spring.datasource.validationQuery = SELECT 1

db.tenant.banka.ip=host.docker.internal
db.tenant.banka.port=3309
db.tenant.banka.username=root
db.tenant.banka.password=root

db.tenant.finzly.ip=host.docker.internal
db.tenant.finzly.port=3309
db.tenant.finzly.username=root
db.tenant.finzly.password=root


# Added to resolve runtime error due to MethodSecurityConfig
spring.main.allow-bean-definition-overriding=true
management.contextPath=/actuator
management.endpoints.web.exposure.include=*
management.security.enabled=FALSE
spring.jackson.serialization.fail-on-empty-beans=FALSE
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=FALSE
#server.max-http-header-size=20KB
server.max-http-request-header-size=20KB
server.servlet.session.timeout=240m
spring.datasource.testWhileIdle=TRUE
javax.persistence.jdbc.driver = com.mysql.jdbc.Driver
org.hibernate.dialect.Dialect = org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect

#Prefix indicates first level for every property loaded from the Parameter Store.
#All configuration parameters are retrieved from a common path prefix, which defaults to /config.
aws.paramstore.prefix=/config/bankos

# Note: For local env set to false
#Not mandatory. By default spring cloud set value to true
aws.paramstore.enabled=false

#Default value is ${spring.application.name}
#Name to use when constructing the path for the properties to look up for a specific service.
aws.paramstore.name=${spring.application.name}

#Name of the context that defines properties shared across all services
#Default value is application
aws.paramstore.defaultContext=global

aws.paramstore.profileSeparator=_

#Manadatory configuration

cloud.aws.region.stack.auto=false

##Internal urls
##Application team review and remove the properties not used by your app
service.admin.internal.url=http://galaxy-admin:8081/admin
service.staticdata.internal.url=http://galaxy-staticdata:8084/staticdata
service.legalentity.internal.url=http://galaxy-legalentity:8083/legalentity

#moved from config server
spring.jpa.properties.hibernate.jdbc.batch_size=100
spring.jpa.properties.hibernate.order_inserts=0
spring.jpa.open-in-view=true
spring.cloud.aws.region.static=us-east-2
bankos.messaging.topic.dashboard =bankos-dashboard-activities-local
bankos.security.files.mime-type={'image/gif','image/jpeg','image/bmp','image/png','text/csv','application/json', 'application/pdf','text/plain','application/vnd.openxmlformats-officedocument.spreadsheetml.sheet','application/vnd.ms-excel','application/msword','application/vnd.openxmlformats-officedocument.wordprocessingml.document'}
bankos.preferences.timezone=America/New_York

spring.cloud.config.import-check.enabled=false
galaxy.aws.region=us-east-2
db.minimum-idle=5
db.maximum-pool-size=10
bankos.messaging.sqs.topic.dashboard=bankos-dashboard-activities-local
db.idle-timeout = 300000
db.max-lifetime= 600000
bankos.security.files.scan.hostname=13.232.25.152
bankos.security.headers.content-security-policy=frame-src'self'*.finzly.netlocalhost:8080localhost*;

#SQS config
cloud.aws.sqs.endpoint=http://host.docker.internal:4566
spring.cloud.aws.credentials.access-key=test
cloud.aws.credentials.secret-key=test
cloud.aws.region.static= ${CLOUD-AWS-REGION:us-east-1}
local.debug.sqs.endpoint.enabled=true

# Set the logging level
logging.level.root=INFO
logging.file.name=/var/log/dashboard-service/app.log
logging.file.path=/var/log/dashboard-service

bankos.redis.cache.common.member.ip=bankos-common.txwosf.clustercfg.use2.cache.amazonaws.com
bankos.redis.cache.common.member.port=6379
bankos.redis.cache.common.member.password=""

bankos.application.db.base-schema=paymentgalaxy
galaxy.aws.region=us-east-2
bankos.redis.cache.common.member.ip=bankos-common.txwosf.clustercfg.use2.cache.amazonaws.com
bankos.redis.cache.common.member.port=6379
bankos.redis.cache.common.member.password=""
bankos.security.files.scan.hostname=test
bankos.security.files.mime-type={'image/gif','image/jpeg','image/bmp','image/png','text/csv','application/json', 'application/pdf','text/plain','application/vnd.openxmlformats-officedocument.spreadsheetml.sheet','application/vnd.ms-excel','application/msword','application/vnd.openxmlformats-officedocument.wordprocessingml.document'}
bankos.security.headers.content-security-policy=frame-src 'self' *.finzly.net *.local.net localhost:8080 localhost *; frame-ancestors 'self' *.finzly.net *.local.net localhost:8080 localhost *; object-src 'none';
#env=local
spring.profiles.active=DEV
bankos.security.common.csv.blocked-char={'=','@','+'}
eureka.client.enabled=false
server.max-http-header-size=10MB
server.max-http-request-header-size=20KB

# AWS related configuration
galaxy.aws.accessKey=your-access-key
galaxy.aws.secretKey=your-secret-key
galaxy.aws.encryption=AES256   # or whatever encryption type you use

# Spring profile

